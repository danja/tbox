version: "3"
services:
  ssh-server:
    build: .
    ports:
      - "2222:22"
    volumes:
      - ./projects:/home/projects
      - ./config/scripts:/scripts:ro
      - node_modules:/home/projects/node_modules
      - npm_cache:/root/.npm
      - ssh_config:/root/.ssh
    environment:
      - NODE_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    healthcheck:
      test: ["CMD", "pgrep", "sshd"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: ./services/app
    ports:
      - "4010:8311"
    depends_on:
      - fuseki
    environment:
      - FUSEKI_URL=http://fuseki:3030
      - FUSEKI_DATASET=semem

fuseki:
  build: ./jena-fuseki-docker-5.3.0  # Path relative to tbox directory
  image: tbox_fuseki:5.3.0  # Custom image name
  ports:
    - "4030:3030"
  volumes:
    - ./data/fuseki:/fuseki/databases
    - ./config/fuseki:/fuseki/configuration
  environment:
    - ADMIN_PASSWORD=admin123
    - FUSEKI_CONFIG_FILE=/fuseki/configuration/config.ttl
    - FUSEKI_BASE=/fuseki
    - FUSEKI_ARGS=--tdb2 --update
    - JVM_ARGS=-Xmx2g
  init: true
  restart: unless-stopped
  healthcheck:
    test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3030/"]
    interval: 1m
    timeout: 10s
    retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "4080:4080"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/web/public:/usr/share/nginx/html:ro
    depends_on:
      - app
      - fuseki

  xmpp:
    image: prosody/prosody
    ports:
      - "5222:5222"
      - "5269:5269"
      - "5280:5280"
    volumes:
      - ./config/prosody/prosody.cfg.lua:/etc/prosody/prosody.cfg.lua:ro
      - ./config/certs:/etc/prosody/certs:ro
    environment:
      - PROSODY_ADMIN_JID=admin@localhost
      - PROSODY_ADMIN_PASSWORD=admin123
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    restart: unless-stopped

  monitor:
    build:
      context: ./services/monitor
    ports:
      - "4040:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
      - fuseki
      - xmpp

volumes:
  node_modules:
  npm_cache:
  ssh_config:
  data:
    driver: local
