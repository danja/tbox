This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-19T15:10:13.726Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------
User Provided Header:
-----------------------
tbox source code

================================================================
Directory Structure
================================================================
app/
  app.js
certs/
  localhost.crt
config/
  certs/
    localhost.crt
  fuseki/
    config.ttl
  nginx/
    nginx.conf
  prosody/
    prosody.cfg.lua
data/
  fuseki/
    databases/
      ds/
        Data-0001/
          tdb.lock
        tdb.lock
    system/
      tdb.cfg
      tdb.lock
    templates/
      config-mem
      config-tdb
      config-tdb-dir
      config-tdb-mem
      config-tdb2
      config-tdb2-dir
      config-tdb2-mem
    shiro.ini
monitor/
  Dockerfile
  index.js
  package-lock.json
  package.json
projects/
  docker-compose.yml
  Dockerfile
  setup-repos.sh
scripts/
  check_fuseki.sh
  restart.sh
  test_fuseki-persistence.sh
services/
  app/
    src/
      app.js
    Dockerfile
    package.json
  monitor/
    src/
      index.js
      index.js.backup
    Dockerfile
    package-lock.json
    package.json
  web/
    public/
      index.html
.gitignore
about.md
check_fuseki.sh
config.ttl
current-state.txt
docker-compose.yml
docker-compose.yml.backup
Dockerfile
LICENSE
nginx copy.conf
nginx.conf
package copy.json
package-ref.json
package.json
README.md
restart.sh
test_fuseki-persistence.sh
tree.txt

================================================================
Files
================================================================

================
File: app/app.js
================
const express = require('express');
const app = express();
const port = 8311;

app.get('/', (req, res) => {
    const headers = JSON.stringify(req.headers, null, 2);
    res.send(`
        <pre>Request Headers:
        ${headers}</pre>
        <hr>
        Hello, Sandboxed World!
    `);
});

app.get('/health', (req, res) => {
    res.json({
        status: 'ok',
        time: new Date(),
        uptime: process.uptime()
    });
});

app.listen(port, '0.0.0.0', () => console.log(`Server running on port ${port}`));

================
File: certs/localhost.crt
================
-----BEGIN CERTIFICATE-----
MIIDiTCCAnGgAwIBAgIUJTcNoUREEMw+LGrwLpfZiejmGX4wDQYJKoZIhvcNAQEL
BQAwVDELMAkGA1UEBhMCaXQxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDENMAsGA1UEAwwEdGJveDAeFw0yNDEx
MzAxODQyMTZaFw0yNTExMzAxODQyMTZaMFQxCzAJBgNVBAYTAml0MRMwEQYDVQQI
DApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQx
DTALBgNVBAMMBHRib3gwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCH
8cCUXf89k7l6Yg1k/KvEUcwRhkLIGe/1jnfF737vf7ErL7cY3EEW5coo3OISWoPf
5ElHrO/RpiBGI5a9O1A6c/zCrzBRlWQVymOFlGRwnAr64QUDc1j/Xp43EDHG+otJ
99FNhjvbG/Td9+1zEURl19QFEoSaSwo8edQMMIYtlGR3lrnQoHBL4I0ZvvtmKh7q
9R9ooeQKmT+HDxQd2wBWPnhCUA0edk+WPnfxfMxY0q8pBo5hNsk1R29j4Bj7iTJX
M3+3QIzdTqnf/Ze6uIbQRXQYpz0+koyDsT22fVcEkxf+NlAFyenUslG5f+u8IWq7
gtwUcYfaT832YTPfnJSPAgMBAAGjUzBRMB0GA1UdDgQWBBRNAKxfTtwgCVmCPf92
LPuvLxxavTAfBgNVHSMEGDAWgBRNAKxfTtwgCVmCPf92LPuvLxxavTAPBgNVHRMB
Af8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQAvzSy3GuHkFGMgkLXO895J7wWw
IEmWMLi9iQJvWWmT2S/P98jzBwsrJMRRR5jsx6iWdOSMdTlw9dd8IyYKVQU6KHdQ
urkZB47xRJ9AVStJ4Ptn01hYLfPG0nGVmwpIZD0pNqoyLSbMA4wbrnQich0+/jSL
HUrUjqbIWyYgCGrHiLf+QaBPSCyy2Qoqqe1+Rox4eKzjWuy9G6cvM7o/NS3JqB23
RD0dV+ylW1KTMSyMLQRa/I7khMYE7igaVplGQKW4pvhprUgHc3w/IUi0XCfackiE
smb6TCJwUcUk0Nk9/bPAxRTOCCoCIEjwbFbbpZmHmDe7q5qRjljWSb0b+lac
-----END CERTIFICATE-----

================
File: config/certs/localhost.crt
================
-----BEGIN CERTIFICATE-----
MIIDiTCCAnGgAwIBAgIUJTcNoUREEMw+LGrwLpfZiejmGX4wDQYJKoZIhvcNAQEL
BQAwVDELMAkGA1UEBhMCaXQxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDENMAsGA1UEAwwEdGJveDAeFw0yNDEx
MzAxODQyMTZaFw0yNTExMzAxODQyMTZaMFQxCzAJBgNVBAYTAml0MRMwEQYDVQQI
DApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQx
DTALBgNVBAMMBHRib3gwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCH
8cCUXf89k7l6Yg1k/KvEUcwRhkLIGe/1jnfF737vf7ErL7cY3EEW5coo3OISWoPf
5ElHrO/RpiBGI5a9O1A6c/zCrzBRlWQVymOFlGRwnAr64QUDc1j/Xp43EDHG+otJ
99FNhjvbG/Td9+1zEURl19QFEoSaSwo8edQMMIYtlGR3lrnQoHBL4I0ZvvtmKh7q
9R9ooeQKmT+HDxQd2wBWPnhCUA0edk+WPnfxfMxY0q8pBo5hNsk1R29j4Bj7iTJX
M3+3QIzdTqnf/Ze6uIbQRXQYpz0+koyDsT22fVcEkxf+NlAFyenUslG5f+u8IWq7
gtwUcYfaT832YTPfnJSPAgMBAAGjUzBRMB0GA1UdDgQWBBRNAKxfTtwgCVmCPf92
LPuvLxxavTAfBgNVHSMEGDAWgBRNAKxfTtwgCVmCPf92LPuvLxxavTAPBgNVHRMB
Af8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQAvzSy3GuHkFGMgkLXO895J7wWw
IEmWMLi9iQJvWWmT2S/P98jzBwsrJMRRR5jsx6iWdOSMdTlw9dd8IyYKVQU6KHdQ
urkZB47xRJ9AVStJ4Ptn01hYLfPG0nGVmwpIZD0pNqoyLSbMA4wbrnQich0+/jSL
HUrUjqbIWyYgCGrHiLf+QaBPSCyy2Qoqqe1+Rox4eKzjWuy9G6cvM7o/NS3JqB23
RD0dV+ylW1KTMSyMLQRa/I7khMYE7igaVplGQKW4pvhprUgHc3w/IUi0XCfackiE
smb6TCJwUcUk0Nk9/bPAxRTOCCoCIEjwbFbbpZmHmDe7q5qRjljWSb0b+lac
-----END CERTIFICATE-----

================
File: config/fuseki/config.ttl
================
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix tdb2:    <http://jena.apache.org/2016/tdb#> .

[] rdf:type fuseki:Server ;
   fuseki:services (
     [ rdf:type fuseki:Service ;
       fuseki:name "ds" ;
       fuseki:endpoint [ fuseki:operation fuseki:query ; ] ;
       fuseki:endpoint [ fuseki:operation fuseki:update ; ] ;
       fuseki:dataset [ rdf:type tdb2:DatasetTDB2 ;
                       tdb2:location "/fuseki/databases/ds" ;
                     ] ;
     ]) .

================
File: config/nginx/nginx.conf
================
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream app_server {
        server app:8311;
    }

    upstream fuseki_server {
        server fuseki:3030;
    }

    server {
        listen 4080;
        root /usr/share/nginx/html;
        index index.html;

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        # Add for debugging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log debug;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /fuseki/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            proxy_pass http://fuseki_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}

================
File: config/prosody/prosody.cfg.lua
================
admins = { }

modules_enabled = {
    "roster"; "saslauth"; "tls"; "dialback"; "disco";
    "posix"; "http_upload"; "ping"; "register";
    "admin_adhoc"; "offline"; "c2s"; "s2s";
    "http_monitoring";
}

allow_registration = true
c2s_require_encryption = true
s2s_require_encryption = true

http_monitoring_interval = 30

http_upload_file_size_limit = 104857600
http_upload_expire_after = 60 * 60 * 24 * 7
http_upload_path = "/var/lib/prosody/http_upload"

log = {
    info = "/var/log/prosody/prosody.log";
    error = "/var/log/prosody/error.log";
}

VirtualHost "localhost"
    ssl = {
        key = "/etc/prosody/certs/localhost.key";
        certificate = "/etc/prosody/certs/localhost.crt";
    }

================
File: data/fuseki/databases/ds/Data-0001/tdb.lock
================
9

================
File: data/fuseki/databases/ds/tdb.lock
================
9

================
File: data/fuseki/system/tdb.cfg
================
{ 
  "tdb.file_mode" : "direct" ,
  "tdb.block_size" : 1024 ,
  "tdb.block_read_cache_size" : 50 ,
  "tdb.block_write_cache_size" : 20 ,
  "tdb.node2nodeid_cache_size" : 500 ,
  "tdb.nodeid2node_cache_size" : 500 ,
  "tdb.node_miss_cache_size" : 100 ,
  "tdb.index_node2id" : "node2id" ,
  "tdb.index_id2node" : "nodes" ,
  "tdb.triple_index_primary" : "SPO" ,
  "tdb.triple_indexes" : [ 
      "SPO" ,
      "POS" ,
      "OSP"
    ] ,
  "tdb.quad_index_primary" : "GSPO" ,
  "tdb.quad_indexes" : [ 
      "GSPO" ,
      "GPOS" ,
      "GOSP" ,
      "POSG" ,
      "OSPG" ,
      "SPOG"
    ] ,
  "tdb.prefix_index_primary" : "GPU" ,
  "tdb.prefix_indexes" : [ "GPU" ] ,
  "tdb.file_prefix_index" : "prefixIdx" ,
  "tdb.file_prefix_nodeid" : "prefix2id" ,
  "tdb.file_prefix_id2node" : "prefixes"
}

================
File: data/fuseki/system/tdb.lock
================
9

================
File: data/fuseki/templates/config-mem
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .

## ---------------------------------------------------------------
## Updatable in-memory dataset.

<#service1> rdf:type fuseki:Service ;
    # URI of the dataset -- http://host:port/{NAME}
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;     
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "" ;
    fuseki:serviceReadWriteQuads       "" ;
    fuseki:dataset                     <#dataset> ;
    .

# Transactional, in-memory dataset. Initially empty.
<#dataset> rdf:type ja:DatasetTxnMem .

================
File: data/fuseki/templates/config-tdb
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .

## ---------------------------------------------------------------
## Updatable TDB dataset with all services enabled.

<#service_tdb_all> rdf:type fuseki:Service ;
    rdfs:label                         "TDB {NAME}" ;
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;
    # A separate read-only graph store endpoint:
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "";
    fuseki:serviceReadWriteQuads       "";
    fuseki:dataset                     <#tdb_dataset_readwrite> ;
    .

<#tdb_dataset_readwrite> rdf:type      tdb:DatasetTDB ;
    tdb:location "{FUSEKI_BASE}/databases/{NAME}" ;
    ##ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "3000" ] ;
    ##tdb:unionDefaultGraph true ;
    .

================
File: data/fuseki/templates/config-tdb-dir
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .

## ---------------------------------------------------------------
## Updatable TDB dataset with all services enabled.

<#service_tdb_all> rdf:type fuseki:Service ;
    rdfs:label                      "TDB {NAME}" ;
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;     
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "" ;
    fuseki:serviceReadWriteQuads       "" ;
    fuseki:dataset                     <#tdb_dataset_readwrite> ;
    .

<#tdb_dataset_readwrite> rdf:type      tdb:DatasetTDB ;
    tdb:location "{DIR}" ;
    ##tdb:unionDefaultGraph true ;
    .

================
File: data/fuseki/templates/config-tdb-mem
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .

## ---------------------------------------------------------------
## Updatable TDB dataset im-memory with all services enabled.

<#service_tdb_all> rdf:type fuseki:Service ;
    rdfs:label                      "TDB {NAME}" ;
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;     
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "" ;
    fuseki:serviceReadWriteQuads       "" ;
    fuseki:dataset                     <#tdb_dataset_readwrite> ;
    .

<#tdb_dataset_readwrite> rdf:type      tdb:DatasetTDB ;
    tdb:location "--mem--" ;
    ## tdb:unionDefaultGraph true ;
    .

================
File: data/fuseki/templates/config-tdb2
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

PREFIX :        <#>
PREFIX fuseki:  <http://jena.apache.org/fuseki#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX tdb2:    <http://jena.apache.org/2016/tdb#>
PREFIX ja:      <http://jena.hpl.hp.com/2005/11/Assembler#>

## ---------------------------------------------------------------
## Updatable TDB dataset with all services enabled.

<#service_tdb_all> rdf:type fuseki:Service ;
    rdfs:label                         "TDB2 {NAME}" ;
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;     
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "" ;
    fuseki:serviceReadWriteQuads       "" ;
    fuseki:dataset                     <#tdb_dataset_readwrite> ;
    
    .

<#tdb_dataset_readwrite> rdf:type      tdb2:DatasetTDB2 ;
    tdb2:location "{FUSEKI_BASE}/databases/{NAME}" ;
    ##ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "3000" ] ;
    ##tdb2:unionDefaultGraph true ;
    .

================
File: data/fuseki/templates/config-tdb2-dir
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

PREFIX :        <#>
PREFIX fuseki:  <http://jena.apache.org/fuseki#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX tdb2:    <http://jena.apache.org/2016/tdb#>
PREFIX ja:      <http://jena.hpl.hp.com/2005/11/Assembler#>

## ---------------------------------------------------------------
## Updatable TDB2 dataset with all services enabled.

<#service_tdb_all> rdf:type fuseki:Service ;
    rdfs:label                         "TDB2 {NAME}" ;
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;     
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "" ;
    fuseki:serviceReadWriteQuads       "" ;
    fuseki:dataset                     <#tdb_dataset_readwrite> ;
    
    .

<#tdb_dataset_readwrite> rdf:type      tdb2:DatasetTDB2 ;
    tdb2:location "{DIR}" ;
    ##tdb2:unionDefaultGraph true ;
    .

================
File: data/fuseki/templates/config-tdb2-mem
================
# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

PREFIX :        <#>
PREFIX fuseki:  <http://jena.apache.org/fuseki#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX tdb2:    <http://jena.apache.org/2016/tdb#>
PREFIX ja:      <http://jena.hpl.hp.com/2005/11/Assembler#>

## ---------------------------------------------------------------
## Updatable TDB2 dataset im-memory with all services enabled.

<#service_tdb_all> rdf:type fuseki:Service ;
    rdfs:label                         "TDB2 {NAME}" ;
    fuseki:name                        "{NAME}" ;
    fuseki:serviceQuery                "" ;
    fuseki:serviceQuery                "sparql" ;
    fuseki:serviceQuery                "query" ;
    fuseki:serviceUpdate               "" ;
    fuseki:serviceUpdate               "update" ;
    fuseki:serviceUpload               "upload" ;
    fuseki:serviceReadWriteGraphStore  "data" ;     
    fuseki:serviceReadGraphStore       "get" ;
    fuseki:serviceReadQuads            "" ;
    fuseki:serviceReadWriteQuads       "" ;
    fuseki:dataset                     <#tdb_dataset_readwrite> ;
    .

<#tdb_dataset_readwrite> rdf:type      tdb2:DatasetTDB2 ;
    tdb2:location "--mem--" ;
    ## tdb2:unionDefaultGraph true ;
    .

================
File: data/fuseki/shiro.ini
================
#   Licensed to the Apache Software Foundation (ASF) under one or more
#   contributor license agreements.  See the NOTICE file distributed with
#   this work for additional information regarding copyright ownership.
#   The ASF licenses this file to You under the Apache License, Version 2.0
#   (the "License"); you may not use this file except in compliance with
#   the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

[main]
# Development
ssl.enabled = false

plainMatcher=org.apache.shiro.authc.credential.SimpleCredentialsMatcher
#iniRealm=org.apache.shiro.realm.text.IniRealm
iniRealm.credentialsMatcher = $plainMatcher

#localhost=org.apache.jena.fuseki.authz.LocalhostFilter

[users]
# Implicitly adds "iniRealm =  org.apache.shiro.realm.text.IniRealm"
admin=admin123

[roles]

[urls]
## Control functions open to anyone
/$/status = anon
/$/ping   = anon

## and the rest are restricted
/$/** = authcBasic,user[admin]

## Sparql update is restricted
/*/update/** = authcBasic,user[admin]


## If you want simple, basic authentication user/password
## on the operations,
##    1 - set a password in [users]
##    2 - change the line above to:
## /$/** = authcBasic,user[admin]
## and set a better

## or to allow any access.
##/$/** = anon

# Everything else
/**=anon

================
File: monitor/Dockerfile
================
FROM node:alpine
WORKDIR /app
COPY package.json .
RUN npm install
COPY . .
EXPOSE 8080
CMD ["node", "index.js"]

================
File: monitor/index.js
================
import express from 'express';
import fetch from 'node-fetch';

const app = express();

const checkFusekiHealth = async () => {
    try {
        const response = await fetch('http://fuseki:3030/$/ping', {
            timeout: 5000
        });
        return {
            status: response.ok ? 'healthy' : 'unhealthy',
            responseTime: response.headers.get('X-Response-Time'),
            lastChecked: new Date().toISOString()
        };
    } catch (error) {
        return {
            status: 'unhealthy',
            error: error.message,
            lastChecked: new Date().toISOString()
        };
    }
};

const checkProsodyHealth = async () => {
    try {
        const response = await fetch('http://xmpp:5282/http-monitor', {
            timeout: 5000
        });
        return {
            status: response.ok ? 'healthy' : 'unhealthy',
            responseTime: response.headers.get('X-Response-Time'),
            lastChecked: new Date().toISOString()
        };
    } catch (error) {
        return {
            status: 'unhealthy',
            error: error.message,
            lastChecked: new Date().toISOString()
        };
    }
};

app.get('/health/fuseki', async (req, res) => {
    const health = await checkFusekiHealth();
    res.json(health);
});

app.get('/health/prosody', async (req, res) => {
    const health = await checkProsodyHealth();
    res.json(health);
});

app.get('/', async (req, res) => {
    const [fusekiHealth, prosodyHealth] = await Promise.all([
        checkFusekiHealth(),
        checkProsodyHealth()
    ]);

    res.send(`
    <h1>Service Health</h1>
    <h2>Fuseki</h2>
    <pre>${JSON.stringify(fusekiHealth, null, 2)}</pre>
    <h2>Prosody</h2>
    <pre>${JSON.stringify(prosodyHealth, null, 2)}</pre>
  `);
});

const port = process.env.PORT || 8080;
app.listen(port, '0.0.0.0', () => console.log(`Monitor service running on port ${port}`));

================
File: monitor/package-lock.json
================
{
    "name": "tbox-monitor",
    "version": "1.0.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "tbox-monitor",
            "version": "1.0.0",
            "dependencies": {
                "express": "^4.21.2",
                "node-fetch": "^3.3.2"
            }
        },
        "node_modules/accepts": {
            "version": "1.3.8",
            "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
            "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
            "license": "MIT",
            "dependencies": {
                "mime-types": "~2.1.34",
                "negotiator": "0.6.3"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/array-flatten": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
            "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
            "license": "MIT"
        },
        "node_modules/body-parser": {
            "version": "1.20.3",
            "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
            "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "content-type": "~1.0.5",
                "debug": "2.6.9",
                "depd": "2.0.0",
                "destroy": "1.2.0",
                "http-errors": "2.0.0",
                "iconv-lite": "0.4.24",
                "on-finished": "2.4.1",
                "qs": "6.13.0",
                "raw-body": "2.5.2",
                "type-is": "~1.6.18",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8",
                "npm": "1.2.8000 || >= 1.4.16"
            }
        },
        "node_modules/bytes": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
            "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/call-bind-apply-helpers": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz",
            "integrity": "sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/call-bound": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz",
            "integrity": "sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "get-intrinsic": "^1.2.6"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/content-disposition": {
            "version": "0.5.4",
            "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
            "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
            "license": "MIT",
            "dependencies": {
                "safe-buffer": "5.2.1"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/content-type": {
            "version": "1.0.5",
            "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
            "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie": {
            "version": "0.7.1",
            "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
            "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie-signature": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
            "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
            "license": "MIT"
        },
        "node_modules/data-uri-to-buffer": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
            "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
            "license": "MIT",
            "engines": {
                "node": ">= 12"
            }
        },
        "node_modules/debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "license": "MIT",
            "dependencies": {
                "ms": "2.0.0"
            }
        },
        "node_modules/depd": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
            "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/destroy": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
            "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8",
                "npm": "1.2.8000 || >= 1.4.16"
            }
        },
        "node_modules/dunder-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
            "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "es-errors": "^1.3.0",
                "gopd": "^1.2.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/ee-first": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
            "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
            "license": "MIT"
        },
        "node_modules/encodeurl": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
            "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/es-define-property": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
            "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-errors": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
            "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-object-atoms": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz",
            "integrity": "sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/escape-html": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
            "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
            "license": "MIT"
        },
        "node_modules/etag": {
            "version": "1.8.1",
            "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
            "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/express": {
            "version": "4.21.2",
            "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
            "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
            "license": "MIT",
            "dependencies": {
                "accepts": "~1.3.8",
                "array-flatten": "1.1.1",
                "body-parser": "1.20.3",
                "content-disposition": "0.5.4",
                "content-type": "~1.0.4",
                "cookie": "0.7.1",
                "cookie-signature": "1.0.6",
                "debug": "2.6.9",
                "depd": "2.0.0",
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "etag": "~1.8.1",
                "finalhandler": "1.3.1",
                "fresh": "0.5.2",
                "http-errors": "2.0.0",
                "merge-descriptors": "1.0.3",
                "methods": "~1.1.2",
                "on-finished": "2.4.1",
                "parseurl": "~1.3.3",
                "path-to-regexp": "0.1.12",
                "proxy-addr": "~2.0.7",
                "qs": "6.13.0",
                "range-parser": "~1.2.1",
                "safe-buffer": "5.2.1",
                "send": "0.19.0",
                "serve-static": "1.16.2",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "type-is": "~1.6.18",
                "utils-merge": "1.0.1",
                "vary": "~1.1.2"
            },
            "engines": {
                "node": ">= 0.10.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/express"
            }
        },
        "node_modules/fetch-blob": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
            "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/jimmywarting"
                },
                {
                    "type": "paypal",
                    "url": "https://paypal.me/jimmywarting"
                }
            ],
            "license": "MIT",
            "dependencies": {
                "node-domexception": "^1.0.0",
                "web-streams-polyfill": "^3.0.3"
            },
            "engines": {
                "node": "^12.20 || >= 14.13"
            }
        },
        "node_modules/finalhandler": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
            "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
            "license": "MIT",
            "dependencies": {
                "debug": "2.6.9",
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "on-finished": "2.4.1",
                "parseurl": "~1.3.3",
                "statuses": "2.0.1",
                "unpipe": "~1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/formdata-polyfill": {
            "version": "4.0.10",
            "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
            "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
            "license": "MIT",
            "dependencies": {
                "fetch-blob": "^3.1.2"
            },
            "engines": {
                "node": ">=12.20.0"
            }
        },
        "node_modules/forwarded": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
            "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/fresh": {
            "version": "0.5.2",
            "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
            "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/function-bind": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
            "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-intrinsic": {
            "version": "1.2.6",
            "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.6.tgz",
            "integrity": "sha512-qxsEs+9A+u85HhllWJJFicJfPDhRmjzoYdl64aMWW9yRIJmSyxdn8IEkuIM530/7T+lv0TIHd8L6Q/ra0tEoeA==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "dunder-proto": "^1.0.0",
                "es-define-property": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.0.0",
                "function-bind": "^1.1.2",
                "gopd": "^1.2.0",
                "has-symbols": "^1.1.0",
                "hasown": "^2.0.2",
                "math-intrinsics": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/gopd": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
            "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/has-symbols": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
            "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/hasown": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
            "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
            "license": "MIT",
            "dependencies": {
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/http-errors": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
            "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
            "license": "MIT",
            "dependencies": {
                "depd": "2.0.0",
                "inherits": "2.0.4",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "toidentifier": "1.0.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/iconv-lite": {
            "version": "0.4.24",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
            "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
            "license": "MIT",
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/inherits": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
            "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
            "license": "ISC"
        },
        "node_modules/ipaddr.js": {
            "version": "1.9.1",
            "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
            "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/math-intrinsics": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
            "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/media-typer": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
            "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/merge-descriptors": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
            "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/methods": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
            "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
            "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
            "license": "MIT",
            "bin": {
                "mime": "cli.js"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/mime-db": {
            "version": "1.52.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
            "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime-types": {
            "version": "2.1.35",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
            "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
            "license": "MIT",
            "dependencies": {
                "mime-db": "1.52.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
            "license": "MIT"
        },
        "node_modules/negotiator": {
            "version": "0.6.3",
            "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
            "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/node-domexception": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
            "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/jimmywarting"
                },
                {
                    "type": "github",
                    "url": "https://paypal.me/jimmywarting"
                }
            ],
            "license": "MIT",
            "engines": {
                "node": ">=10.5.0"
            }
        },
        "node_modules/node-fetch": {
            "version": "3.3.2",
            "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz",
            "integrity": "sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==",
            "license": "MIT",
            "dependencies": {
                "data-uri-to-buffer": "^4.0.0",
                "fetch-blob": "^3.1.4",
                "formdata-polyfill": "^4.0.10"
            },
            "engines": {
                "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/node-fetch"
            }
        },
        "node_modules/object-inspect": {
            "version": "1.13.3",
            "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz",
            "integrity": "sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/on-finished": {
            "version": "2.4.1",
            "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
            "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
            "license": "MIT",
            "dependencies": {
                "ee-first": "1.1.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/parseurl": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
            "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/path-to-regexp": {
            "version": "0.1.12",
            "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
            "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
            "license": "MIT"
        },
        "node_modules/proxy-addr": {
            "version": "2.0.7",
            "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
            "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
            "license": "MIT",
            "dependencies": {
                "forwarded": "0.2.0",
                "ipaddr.js": "1.9.1"
            },
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/qs": {
            "version": "6.13.0",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
            "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
            "license": "BSD-3-Clause",
            "dependencies": {
                "side-channel": "^1.0.6"
            },
            "engines": {
                "node": ">=0.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/range-parser": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
            "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/raw-body": {
            "version": "2.5.2",
            "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
            "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "http-errors": "2.0.0",
                "iconv-lite": "0.4.24",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/safe-buffer": {
            "version": "5.2.1",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
            "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT"
        },
        "node_modules/safer-buffer": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
            "license": "MIT"
        },
        "node_modules/send": {
            "version": "0.19.0",
            "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
            "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
            "license": "MIT",
            "dependencies": {
                "debug": "2.6.9",
                "depd": "2.0.0",
                "destroy": "1.2.0",
                "encodeurl": "~1.0.2",
                "escape-html": "~1.0.3",
                "etag": "~1.8.1",
                "fresh": "0.5.2",
                "http-errors": "2.0.0",
                "mime": "1.6.0",
                "ms": "2.1.3",
                "on-finished": "2.4.1",
                "range-parser": "~1.2.1",
                "statuses": "2.0.1"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/send/node_modules/encodeurl": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
            "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/send/node_modules/ms": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
            "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
            "license": "MIT"
        },
        "node_modules/serve-static": {
            "version": "1.16.2",
            "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
            "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
            "license": "MIT",
            "dependencies": {
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "parseurl": "~1.3.3",
                "send": "0.19.0"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/setprototypeof": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
            "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
            "license": "ISC"
        },
        "node_modules/side-channel": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
            "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3",
                "side-channel-list": "^1.0.0",
                "side-channel-map": "^1.0.1",
                "side-channel-weakmap": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-list": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
            "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-map": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
            "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-weakmap": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
            "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3",
                "side-channel-map": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/statuses": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
            "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/toidentifier": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
            "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
            "license": "MIT",
            "engines": {
                "node": ">=0.6"
            }
        },
        "node_modules/type-is": {
            "version": "1.6.18",
            "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
            "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
            "license": "MIT",
            "dependencies": {
                "media-typer": "0.3.0",
                "mime-types": "~2.1.24"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/unpipe": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
            "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/utils-merge": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
            "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4.0"
            }
        },
        "node_modules/vary": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
            "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/web-streams-polyfill": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz",
            "integrity": "sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==",
            "license": "MIT",
            "engines": {
                "node": ">= 8"
            }
        }
    }
}

================
File: monitor/package.json
================
{
    "name": "tbox-monitor",
    "version": "1.0.0",
    "type": "module",
    "dependencies": {
        "express": "^4.21.2",
        "node-fetch": "^3.3.2"
    }
}

================
File: projects/docker-compose.yml
================
version: '3'
services:
  node-ssh:
    build: .
    ports:
      - "2222:22"
    volumes:
      - ./repositories:/repositories
      - node_modules:/repositories/node_modules
      - npm_cache:/root/.npm
      - ssh_config:/root/.ssh

volumes:
  node_modules:
  npm_cache:
  ssh_config:

================
File: projects/Dockerfile
================
# Base image
FROM node:18-alpine

# Install required packages
RUN apk add --no-cache openssh git

# Create persistent directories
RUN mkdir -p /app /root/.ssh /root/.npm

# Set working directory
WORKDIR /app

# Add volumes for persistence
VOLUME ["/app", "/root/.ssh", "/root/.npm"]

# Expose SSH port
EXPOSE 22

# Start SSH service and keep container running
CMD ["sh", "-c", "/usr/sbin/sshd && tail -f /dev/null"]

COPY setup-repos.sh /usr/local/bin/

RUN chmod +x /usr/local/bin/setup-repos.sh

================
File: projects/setup-repos.sh
================
#!/bin/sh
cd /repositories

# Define repos to clone
REPOS=(
  "user/repo1"
  "user/repo2"
)

# Clone and install each repo
for repo in "${REPOS[@]}"; do
  dirname=$(basename $repo)
  if [ ! -d "$dirname" ]; then
    git clone "https://github.com/$repo" "$dirname"
    cd "$dirname"
    npm install
    cd ..
  fi
done

================
File: scripts/check_fuseki.sh
================
#!/bin/bash

echo "Waiting for Fuseki to be ready..."
until curl -s http://localhost:4030/$/ping > /dev/null; do
    echo "Waiting for Fuseki..."
    sleep 2
done
echo "Fuseki is up!"

# Check datasets
echo "Checking datasets..."
curl -X GET http://localhost:4030/$/datasets \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" && echo -e "\nDataset check - It works!"

echo -e "\nAdding test data..."
curl -X POST http://localhost:4030/ds \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-update" \
  --data "INSERT DATA { <http://example/s> <http://example/p> <http://example/o> }" && echo "Insert - It works!"

echo -e "\nQuerying data (SELECT)..."
curl -X POST http://localhost:4030/ds \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-query" \
  -H "Accept: application/sparql-results+json" \
  --data "SELECT * WHERE { ?s ?p ?o }" && echo "Select - It works!"

echo -e "\nQuerying data (CONSTRUCT)..."
curl -X POST http://localhost:4030/ds \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-query" \
  -H "Accept: text/turtle" \
  --data "CONSTRUCT { ?s ?p ?o } WHERE { ?s ?p ?o }" && echo "Construct - It works!"

================
File: scripts/restart.sh
================
docker-compose down --volumes  # Remove containers and volumes
docker-compose build --no-cache  # Rebuild without cache
docker-compose up -d  # Start fresh

docker-compose logs

curl -X GET http://localhost:4030/test/query \
  -H "Accept: application/sparql-results+json" \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  --data-urlencode "query=SELECT * WHERE { ?s ?p ?o }"

================
File: scripts/test_fuseki-persistence.sh
================
#!/bin/bash

echo "Waiting for Fuseki to be ready..."
until curl -s http://localhost:4030/$/ping > /dev/null; do
    echo "Waiting for Fuseki..."
    sleep 2
done
echo "Fuseki is up!"

echo "Adding test data..."
curl -X POST http://localhost:4030/ds/update \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-update" \
  --data "INSERT DATA { <http://example/s> <http://example/p> <http://example/o> }"

echo -e "\nRestarting containers..."
docker-compose restart

echo "Waiting for Fuseki to be ready again..."
until curl -s http://localhost:4030/$/ping > /dev/null; do
    echo "Waiting for Fuseki..."
    sleep 2
done

echo -e "\nQuerying data..."
curl -X GET http://localhost:4030/ds/query \
  -H "Accept: application/sparql-results+json" \
  --data-urlencode "query=SELECT * WHERE { ?s ?p ?o }"

================
File: services/app/src/app.js
================
const express = require('express');
const app = express();
const port = 8311;

app.get('/', (req, res) => {
    const headers = JSON.stringify(req.headers, null, 2);
    res.send(`
        <pre>Request Headers:
        ${headers}</pre>
        <hr>
        Hello, Sandboxed World!
    `);
});

app.get('/health', (req, res) => {
    res.json({
        status: 'ok',
        time: new Date(),
        uptime: process.uptime()
    });
});

app.listen(port, '0.0.0.0', () => console.log(`Server running on port ${port}`));

================
File: services/app/Dockerfile
================
FROM node:alpine
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY src ./src
EXPOSE 8311
CMD ["node", "src/app.js"]

================
File: services/app/package.json
================
{
    "name": "tbox-app",
    "version": "1.0.0",
    "description": "TBox Application Service",
    "main": "src/app.js",
    "dependencies": {
        "express": "^4.21.2"
    },
    "scripts": {
        "start": "node src/app.js"
    }
}

================
File: services/monitor/src/index.js
================
import express from 'express';
import fetch from 'node-fetch';

const app = express();

const checkFusekiHealth = async () => {
    try {
        const response = await fetch('http://fuseki:3030/$/ping', {
            timeout: 5000
        });
        return {
            status: response.ok ? 'healthy' : 'unhealthy',
            responseTime: response.headers.get('X-Response-Time'),
            lastChecked: new Date().toISOString()
        };
    } catch (error) {
        return {
            status: 'unhealthy',
            error: error.message,
            lastChecked: new Date().toISOString()
        };
    }
};

const checkProsodyHealth = async () => {
    try {
        const response = await fetch('http://xmpp:5282/http-monitor', {
            timeout: 5000
        });
        return {
            status: response.ok ? 'healthy' : 'unhealthy',
            responseTime: response.headers.get('X-Response-Time'),
            lastChecked: new Date().toISOString()
        };
    } catch (error) {
        return {
            status: 'unhealthy',
            error: error.message,
            lastChecked: new Date().toISOString()
        };
    }
};

// General health endpoint
app.get('/health', async (req, res) => {
    const health = {
        status: 'healthy',
        timestamp: new Date().toISOString(),
        services: {}
    };

    try {
        health.services.fuseki = await checkFusekiHealth();
        health.services.prosody = await checkProsodyHealth();

        // If any service is unhealthy, mark overall status as unhealthy
        if (Object.values(health.services).some(service => service.status === 'unhealthy')) {
            health.status = 'unhealthy';
        }

        res.json(health);
    } catch (error) {
        health.status = 'unhealthy';
        health.error = error.message;
        res.status(500).json(health);
    }
});

app.get('/health/fuseki', async (req, res) => {
    const health = await checkFusekiHealth();
    res.json(health);
});

app.get('/health/prosody', async (req, res) => {
    const health = await checkProsodyHealth();
    res.json(health);
});

app.get('/', async (req, res) => {
    const [fusekiHealth, prosodyHealth] = await Promise.all([
        checkFusekiHealth(),
        checkProsodyHealth()
    ]);

    res.send(`
    <h1>Service Health</h1>
    <h2>Fuseki</h2>
    <pre>${JSON.stringify(fusekiHealth, null, 2)}</pre>
    <h2>Prosody</h2>
    <pre>${JSON.stringify(prosodyHealth, null, 2)}</pre>
  `);
});

const port = process.env.PORT || 8080;
app.listen(port, '0.0.0.0', () => console.log(`Monitor service running on port ${port}`));

================
File: services/monitor/src/index.js.backup
================
import express from 'express';
import fetch from 'node-fetch';

const app = express();

const checkFusekiHealth = async () => {
    try {
        const response = await fetch('http://fuseki:3030/$/ping', {
            timeout: 5000
        });
        return {
            status: response.ok ? 'healthy' : 'unhealthy',
            responseTime: response.headers.get('X-Response-Time'),
            lastChecked: new Date().toISOString()
        };
    } catch (error) {
        return {
            status: 'unhealthy',
            error: error.message,
            lastChecked: new Date().toISOString()
        };
    }
};

const checkProsodyHealth = async () => {
    try {
        const response = await fetch('http://xmpp:5282/http-monitor', {
            timeout: 5000
        });
        return {
            status: response.ok ? 'healthy' : 'unhealthy',
            responseTime: response.headers.get('X-Response-Time'),
            lastChecked: new Date().toISOString()
        };
    } catch (error) {
        return {
            status: 'unhealthy',
            error: error.message,
            lastChecked: new Date().toISOString()
        };
    }
};

app.get('/health/fuseki', async (req, res) => {
    const health = await checkFusekiHealth();
    res.json(health);
});

app.get('/health/prosody', async (req, res) => {
    const health = await checkProsodyHealth();
    res.json(health);
});

app.get('/', async (req, res) => {
    const [fusekiHealth, prosodyHealth] = await Promise.all([
        checkFusekiHealth(),
        checkProsodyHealth()
    ]);

    res.send(`
    <h1>Service Health</h1>
    <h2>Fuseki</h2>
    <pre>${JSON.stringify(fusekiHealth, null, 2)}</pre>
    <h2>Prosody</h2>
    <pre>${JSON.stringify(prosodyHealth, null, 2)}</pre>
  `);
});

const port = process.env.PORT || 8080;
app.listen(port, '0.0.0.0', () => console.log(`Monitor service running on port ${port}`));

================
File: services/monitor/Dockerfile
================
FROM node:alpine
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY src ./src
EXPOSE 8080
CMD ["node", "src/index.js"]

================
File: services/monitor/package-lock.json
================
{
    "name": "tbox-monitor",
    "version": "1.0.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "tbox-monitor",
            "version": "1.0.0",
            "dependencies": {
                "express": "^4.21.2",
                "node-fetch": "^3.3.2"
            }
        },
        "node_modules/accepts": {
            "version": "1.3.8",
            "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
            "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
            "license": "MIT",
            "dependencies": {
                "mime-types": "~2.1.34",
                "negotiator": "0.6.3"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/array-flatten": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
            "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
            "license": "MIT"
        },
        "node_modules/body-parser": {
            "version": "1.20.3",
            "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
            "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "content-type": "~1.0.5",
                "debug": "2.6.9",
                "depd": "2.0.0",
                "destroy": "1.2.0",
                "http-errors": "2.0.0",
                "iconv-lite": "0.4.24",
                "on-finished": "2.4.1",
                "qs": "6.13.0",
                "raw-body": "2.5.2",
                "type-is": "~1.6.18",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8",
                "npm": "1.2.8000 || >= 1.4.16"
            }
        },
        "node_modules/bytes": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
            "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/call-bind-apply-helpers": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz",
            "integrity": "sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/call-bound": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz",
            "integrity": "sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "get-intrinsic": "^1.2.6"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/content-disposition": {
            "version": "0.5.4",
            "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
            "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
            "license": "MIT",
            "dependencies": {
                "safe-buffer": "5.2.1"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/content-type": {
            "version": "1.0.5",
            "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
            "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie": {
            "version": "0.7.1",
            "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
            "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie-signature": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
            "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
            "license": "MIT"
        },
        "node_modules/data-uri-to-buffer": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
            "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
            "license": "MIT",
            "engines": {
                "node": ">= 12"
            }
        },
        "node_modules/debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "license": "MIT",
            "dependencies": {
                "ms": "2.0.0"
            }
        },
        "node_modules/depd": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
            "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/destroy": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
            "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8",
                "npm": "1.2.8000 || >= 1.4.16"
            }
        },
        "node_modules/dunder-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
            "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "es-errors": "^1.3.0",
                "gopd": "^1.2.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/ee-first": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
            "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
            "license": "MIT"
        },
        "node_modules/encodeurl": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
            "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/es-define-property": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
            "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-errors": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
            "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-object-atoms": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz",
            "integrity": "sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/escape-html": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
            "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
            "license": "MIT"
        },
        "node_modules/etag": {
            "version": "1.8.1",
            "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
            "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/express": {
            "version": "4.21.2",
            "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
            "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
            "license": "MIT",
            "dependencies": {
                "accepts": "~1.3.8",
                "array-flatten": "1.1.1",
                "body-parser": "1.20.3",
                "content-disposition": "0.5.4",
                "content-type": "~1.0.4",
                "cookie": "0.7.1",
                "cookie-signature": "1.0.6",
                "debug": "2.6.9",
                "depd": "2.0.0",
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "etag": "~1.8.1",
                "finalhandler": "1.3.1",
                "fresh": "0.5.2",
                "http-errors": "2.0.0",
                "merge-descriptors": "1.0.3",
                "methods": "~1.1.2",
                "on-finished": "2.4.1",
                "parseurl": "~1.3.3",
                "path-to-regexp": "0.1.12",
                "proxy-addr": "~2.0.7",
                "qs": "6.13.0",
                "range-parser": "~1.2.1",
                "safe-buffer": "5.2.1",
                "send": "0.19.0",
                "serve-static": "1.16.2",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "type-is": "~1.6.18",
                "utils-merge": "1.0.1",
                "vary": "~1.1.2"
            },
            "engines": {
                "node": ">= 0.10.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/express"
            }
        },
        "node_modules/fetch-blob": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
            "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/jimmywarting"
                },
                {
                    "type": "paypal",
                    "url": "https://paypal.me/jimmywarting"
                }
            ],
            "license": "MIT",
            "dependencies": {
                "node-domexception": "^1.0.0",
                "web-streams-polyfill": "^3.0.3"
            },
            "engines": {
                "node": "^12.20 || >= 14.13"
            }
        },
        "node_modules/finalhandler": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
            "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
            "license": "MIT",
            "dependencies": {
                "debug": "2.6.9",
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "on-finished": "2.4.1",
                "parseurl": "~1.3.3",
                "statuses": "2.0.1",
                "unpipe": "~1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/formdata-polyfill": {
            "version": "4.0.10",
            "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
            "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
            "license": "MIT",
            "dependencies": {
                "fetch-blob": "^3.1.2"
            },
            "engines": {
                "node": ">=12.20.0"
            }
        },
        "node_modules/forwarded": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
            "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/fresh": {
            "version": "0.5.2",
            "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
            "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/function-bind": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
            "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-intrinsic": {
            "version": "1.2.6",
            "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.6.tgz",
            "integrity": "sha512-qxsEs+9A+u85HhllWJJFicJfPDhRmjzoYdl64aMWW9yRIJmSyxdn8IEkuIM530/7T+lv0TIHd8L6Q/ra0tEoeA==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "dunder-proto": "^1.0.0",
                "es-define-property": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.0.0",
                "function-bind": "^1.1.2",
                "gopd": "^1.2.0",
                "has-symbols": "^1.1.0",
                "hasown": "^2.0.2",
                "math-intrinsics": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/gopd": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
            "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/has-symbols": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
            "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/hasown": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
            "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
            "license": "MIT",
            "dependencies": {
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/http-errors": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
            "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
            "license": "MIT",
            "dependencies": {
                "depd": "2.0.0",
                "inherits": "2.0.4",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "toidentifier": "1.0.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/iconv-lite": {
            "version": "0.4.24",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
            "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
            "license": "MIT",
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/inherits": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
            "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
            "license": "ISC"
        },
        "node_modules/ipaddr.js": {
            "version": "1.9.1",
            "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
            "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/math-intrinsics": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
            "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/media-typer": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
            "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/merge-descriptors": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
            "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/methods": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
            "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
            "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
            "license": "MIT",
            "bin": {
                "mime": "cli.js"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/mime-db": {
            "version": "1.52.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
            "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime-types": {
            "version": "2.1.35",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
            "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
            "license": "MIT",
            "dependencies": {
                "mime-db": "1.52.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
            "license": "MIT"
        },
        "node_modules/negotiator": {
            "version": "0.6.3",
            "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
            "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/node-domexception": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
            "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/jimmywarting"
                },
                {
                    "type": "github",
                    "url": "https://paypal.me/jimmywarting"
                }
            ],
            "license": "MIT",
            "engines": {
                "node": ">=10.5.0"
            }
        },
        "node_modules/node-fetch": {
            "version": "3.3.2",
            "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz",
            "integrity": "sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==",
            "license": "MIT",
            "dependencies": {
                "data-uri-to-buffer": "^4.0.0",
                "fetch-blob": "^3.1.4",
                "formdata-polyfill": "^4.0.10"
            },
            "engines": {
                "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/node-fetch"
            }
        },
        "node_modules/object-inspect": {
            "version": "1.13.3",
            "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz",
            "integrity": "sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/on-finished": {
            "version": "2.4.1",
            "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
            "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
            "license": "MIT",
            "dependencies": {
                "ee-first": "1.1.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/parseurl": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
            "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/path-to-regexp": {
            "version": "0.1.12",
            "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
            "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
            "license": "MIT"
        },
        "node_modules/proxy-addr": {
            "version": "2.0.7",
            "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
            "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
            "license": "MIT",
            "dependencies": {
                "forwarded": "0.2.0",
                "ipaddr.js": "1.9.1"
            },
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/qs": {
            "version": "6.13.0",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
            "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
            "license": "BSD-3-Clause",
            "dependencies": {
                "side-channel": "^1.0.6"
            },
            "engines": {
                "node": ">=0.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/range-parser": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
            "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/raw-body": {
            "version": "2.5.2",
            "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
            "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "http-errors": "2.0.0",
                "iconv-lite": "0.4.24",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/safe-buffer": {
            "version": "5.2.1",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
            "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT"
        },
        "node_modules/safer-buffer": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
            "license": "MIT"
        },
        "node_modules/send": {
            "version": "0.19.0",
            "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
            "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
            "license": "MIT",
            "dependencies": {
                "debug": "2.6.9",
                "depd": "2.0.0",
                "destroy": "1.2.0",
                "encodeurl": "~1.0.2",
                "escape-html": "~1.0.3",
                "etag": "~1.8.1",
                "fresh": "0.5.2",
                "http-errors": "2.0.0",
                "mime": "1.6.0",
                "ms": "2.1.3",
                "on-finished": "2.4.1",
                "range-parser": "~1.2.1",
                "statuses": "2.0.1"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/send/node_modules/encodeurl": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
            "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/send/node_modules/ms": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
            "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
            "license": "MIT"
        },
        "node_modules/serve-static": {
            "version": "1.16.2",
            "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
            "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
            "license": "MIT",
            "dependencies": {
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "parseurl": "~1.3.3",
                "send": "0.19.0"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/setprototypeof": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
            "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
            "license": "ISC"
        },
        "node_modules/side-channel": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
            "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3",
                "side-channel-list": "^1.0.0",
                "side-channel-map": "^1.0.1",
                "side-channel-weakmap": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-list": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
            "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-map": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
            "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-weakmap": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
            "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3",
                "side-channel-map": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/statuses": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
            "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/toidentifier": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
            "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
            "license": "MIT",
            "engines": {
                "node": ">=0.6"
            }
        },
        "node_modules/type-is": {
            "version": "1.6.18",
            "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
            "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
            "license": "MIT",
            "dependencies": {
                "media-typer": "0.3.0",
                "mime-types": "~2.1.24"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/unpipe": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
            "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/utils-merge": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
            "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4.0"
            }
        },
        "node_modules/vary": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
            "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/web-streams-polyfill": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz",
            "integrity": "sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==",
            "license": "MIT",
            "engines": {
                "node": ">= 8"
            }
        }
    }
}

================
File: services/monitor/package.json
================
{
    "name": "tbox-monitor",
    "version": "1.0.0",
    "type": "module",
    "dependencies": {
        "express": "^4.21.2",
        "node-fetch": "^3.3.2"
    }
}

================
File: services/web/public/index.html
================
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TBox Dashboard</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 2em;
        }

        .status-card {
            border: 1px solid #ddd;
            padding: 1em;
            margin: 1em 0;
        }

        .healthy {
            color: green;
        }

        .unhealthy {
            color: red;
        }
    </style>
</head>

<body>
    <h1>TBox System Status</h1>
    <div class="status-card">
        <h2>Service Health</h2>
        <p>Monitor: <span id="monitor-status">Checking...</span></p>
        <p>Fuseki: <span id="fuseki-status">Checking...</span></p>
        <p>XMPP: <span id="xmpp-status">Checking...</span></p>
    </div>
    <script>
        async function updateStatus() {
            try {
                const response = await fetch('/health');
                const data = await response.json();
                document.getElementById('monitor-status').textContent = data.status;
                document.getElementById('monitor-status').className = data.status;
            } catch (error) {
                console.error('Error fetching status:', error);
            }
        }
        updateStatus();
        setInterval(updateStatus, 30000);
    </script>
</body>

</html>

================
File: .gitignore
================
fuseki-data

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

================
File: about.md
================
````sh
cd ~/github-danny/hyperdata/packages/tbox # my local dir

```

`docs/artifacts_2025-01-19`

---
next steps are in

/home/danny/github-danny/hyperdata/packages/tbox/docs/artifacts_2024-12-28

docker-compose restart monitor will restart just the monitor service with updated index.js.
For a complete rebuild: docker-compose up -d --build monitor

Here are the key commands to rebuild from scratch:

Stop and remove all containers/volumes:

bashCopydocker-compose down --volumes

Rebuild without using cache:

bashCopydocker-compose build --no-cache

Start everything up:

docker-compose up -d

Check logs for issues:

bashCopydocker-compose logs
These commands are actually stored in restart.sh in your project.
The monitor dashboard will be available at http://localhost:4040 once everything is up.

Restart:
http://localhost:4000/
http://localhost:4030/ - Fuseki
http://localhost:4080/

```sh
 docker-compose up --build

docker-compose down --volumes  # Remove containers and volumes
docker-compose build --no-cache  # Rebuild without cache
docker-compose up -d  # Start fresh

docker-compose logs

curl -X GET http://localhost:4030/ds/query \
  -H "Accept: application/sparql-results+json" \
  --data-urlencode "query=SELECT * WHERE { ?s ?p ?o }"

curl -X GET http://localhost:4030/test/query \
  -H "Accept: application/sparql-results+json" \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  --data-urlencode "query=SELECT * WHERE { ?s ?p ?o }"
````

Access monitor dashboard at http://localhost:4040

================
File: check_fuseki.sh
================
#!/bin/bash

echo "Waiting for Fuseki to be ready..."
until curl -s http://localhost:4030/$/ping > /dev/null; do
    echo "Waiting for Fuseki..."
    sleep 2
done
echo "Fuseki is up!"

# Check datasets
echo "Checking datasets..."
curl -X GET http://localhost:4030/$/datasets \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" && echo -e "\nDataset check - It works!"

echo -e "\nAdding test data..."
curl -X POST http://localhost:4030/ds \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-update" \
  --data "INSERT DATA { <http://example/s> <http://example/p> <http://example/o> }" && echo "Insert - It works!"

echo -e "\nQuerying data (SELECT)..."
curl -X POST http://localhost:4030/ds \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-query" \
  -H "Accept: application/sparql-results+json" \
  --data "SELECT * WHERE { ?s ?p ?o }" && echo "Select - It works!"

echo -e "\nQuerying data (CONSTRUCT)..."
curl -X POST http://localhost:4030/ds \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-query" \
  -H "Accept: text/turtle" \
  --data "CONSTRUCT { ?s ?p ?o } WHERE { ?s ?p ?o }" && echo "Construct - It works!"

================
File: config.ttl
================
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix tdb2:    <http://jena.apache.org/2016/tdb#> .

[] rdf:type fuseki:Server ;
   fuseki:services (
     [ rdf:type fuseki:Service ;
       fuseki:name "ds" ;
       fuseki:endpoint [ fuseki:operation fuseki:query ; ] ;
       fuseki:endpoint [ fuseki:operation fuseki:update ; ] ;
       fuseki:dataset [ rdf:type tdb2:DatasetTDB2 ;
                       tdb2:location "/fuseki/databases/ds" ;
                     ] ;
     ]) .

================
File: current-state.txt
================
Name                   Command                 State      Ports
--------------------------------------------------------------------
tbox_app_1       /start.sh                        Exit 137          
tbox_fuseki_1    /docker-entrypoint.sh /jen ...   Exit 137          
tbox_monitor_1   docker-entrypoint.sh node  ...   Exit 137          
tbox_nginx_1     /docker-entrypoint.sh ngin ...   Exit 0            
tbox_xmpp_1      /entrypoint.sh prosody -F        Restarting

================
File: docker-compose.yml
================
version: "3"
services:
  app:
    build:
      context: ./services/app
    ports:
      - "4000:8311"
    depends_on:
      - fuseki
    environment:
      - FUSEKI_URL=http://fuseki:3030
      - FUSEKI_DATASET=ds
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8311/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  fuseki:
    image: stain/jena-fuseki
    ports:
      - "4030:3030"
    environment:
      - ADMIN_PASSWORD=admin123
      - FUSEKI_DATASET_1=ds
      - FUSEKI_DATASET_ds=/fuseki/databases/ds
    volumes:
      - ./data/fuseki:/fuseki
      - ./config/fuseki/config.ttl:/fuseki/config.ttl

  nginx:
    image: nginx:alpine
    ports:
      - "4080:4080"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/web/public:/usr/share/nginx/html:ro
    depends_on:
      - app
      - fuseki

  xmpp:
    image: prosody/prosody
    ports:
      - "5222:5222"
      - "5269:5269"
      - "5280:5280"
      - "5282:5282"
    volumes:
      - ./data/uploads:/var/lib/prosody/http_upload
      - ./config/prosody/prosody.cfg.lua:/etc/prosody/prosody.cfg.lua:ro
      - ./config/certs:/etc/prosody/certs:ro
      - ./data/prosody:/var/lib/prosody
    environment:
      - PROSODY_GENERATE_CERTS=true
      - PROSODY_MAX_UPLOAD_SIZE=104857600
      - PROSODY_ADMIN_JID=admin@localhost
      - PROSODY_ADMIN_PASSWORD=admin123
      - PROSODY_MONITORING=true
      - PROSODY_MONITORING_PORT=5282
    healthcheck:
      test: ["CMD", "prosodyctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  monitor:
    build:
      context: ./services/monitor
    ports:
      - "4040:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
      - fuseki
      - xmpp

================
File: docker-compose.yml.backup
================
version: "3"
services:
  app:
    build: .
    ports:
      - "4000:8311"
    depends_on:
      - fuseki
    environment:
      - FUSEKI_URL=http://fuseki:3030
      - FUSEKI_DATASET=ds
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8311/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  fuseki:
    image: stain/jena-fuseki
    ports:
      - "4030:3030"
    environment:
      - ADMIN_PASSWORD=admin123
      - FUSEKI_DATASET_1=ds
      - FUSEKI_DATASET_ds=/fuseki/databases/ds
    volumes:
      - ./fuseki-data:/fuseki
      - ./config.ttl:/fuseki/config.ttl

  nginx:
    image: nginx:alpine
    ports:
      - "4080:4080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - fuseki

  xmpp:
    image: prosody/prosody
    ports:
      - "5222:5222"
      - "5269:5269"
      - "5280:5280"
      - "5282:5282" # Monitoring endpoint
    volumes:
      - ./prosody-uploads:/var/lib/prosody/http_upload
      - ./config/prosody/prosody.cfg.lua:/etc/prosody/prosody.cfg.lua:ro
      - ./config/prosody/certs:/etc/prosody/certs:ro
      - ./data/prosody:/var/lib/prosody
    environment:
      - PROSODY_GENERATE_CERTS=true
      - PROSODY_MAX_UPLOAD_SIZE=104857600 # 100MB
      - PROSODY_ADMIN_JID=admin@localhost
      - PROSODY_ADMIN_PASSWORD=admin123
      - PROSODY_MONITORING=true
      - PROSODY_MONITORING_PORT=5282
    healthcheck:
      test: ["CMD", "prosodyctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  monitor:
    build:
      context: ./monitor
      dockerfile: Dockerfile
    ports:
      - "4040:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
      - fuseki
      - xmpp

================
File: Dockerfile
================
FROM alpine:latest

# Install Node.js, npm, and nginx
RUN apk add --update nodejs npm nginx

# Install any other packages you need
RUN apk add --no-cache bash curl wget

# Set up nginx
COPY nginx.conf /etc/nginx/nginx.conf
EXPOSE 3770 8311

# Set up a non-root user
RUN adduser -D myuser

# Create necessary directories and set permissions
RUN mkdir -p /home/myuser/app /home/myuser/data

# Set up working directory
WORKDIR /home/myuser/app

# Copy package.json and package-lock.json (if available)
COPY package*.json ./

# Install Node.js dependencies
RUN npm install && chown -R myuser:myuser /home/myuser/app

# Copy your application files
COPY app .

# Change ownership of the app directory to myuser
RUN chown -R myuser:myuser /home/myuser/app

# Create a script to start both nginx and the Node.js app
RUN echo "#!/bin/sh" > /start.sh && \
    echo "nginx" >> /start.sh && \
    echo "su -c 'node app.js > /home/myuser/app/node.log 2>&1' myuser &" >> /start.sh && \
    echo "tail -f /var/log/nginx/access.log /var/log/nginx/error.log /home/myuser/app/node.log" >> /start.sh && \
    chmod +x /start.sh

# Run the start script
CMD ["/start.sh"]

================
File: LICENSE
================
MIT License

Copyright (c) 2024 Danny Ayers

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

================
File: nginx copy.conf
================
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream app_server {
        server app:8311;
    }

    upstream fuseki_server {
        server fuseki:3030;
    }

    server {
        listen 4080;

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://app_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /fuseki/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://fuseki_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

================
File: nginx.conf
================
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream app_server {
        server app:8311;
    }

    upstream fuseki_server {
        server fuseki:3030;
    }

    server {
        listen 4080;
        root /usr/share/nginx/html;
        index index.html;

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://app_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /fuseki/ {
            proxy_pass http://fuseki_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

================
File: package copy.json
================
{
  "name": "tbox",
  "version": "1.0.0",
  "description": "a minimal Docker-contained environment, primarily for Transmissions",
  "main": "index.js",
  "directories": {
    "doc": "docs"
  },
  "scripts": {
    "rp": "repomix -c repomix.config.json .",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "Danny Ayers",
  "license": "MIT",
  "dependencies": {
    "dockerode": "^4.0.2",
    "express": "^4.21.2",
    "node-fetch": "^3.3.2"
  }
}

================
File: package-ref.json
================
{
    "name": "semem",
    "version": "1.0.0",
    "description": "Semantic Memory",
    "type": "module",
    "main": "index.js",
    "engines": {
        "node": ">=20.11.0"
    },
    "scripts": {
        "test": "jasmine --config=jasmine.json --reporter=tests/helpers/reporter.js",
        "cov": "nyc -a --include=src --reporter=lcov npm run test",
        "docs": "jsdoc -c jsdoc.json",
        "rp": "repomix -c repomix.config.json . "
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/danja/semem.git"
    },
    "keywords": [
        "semantic",
        "memory",
        "llm",
        "rdf",
        "sparql"
    ],
    "author": "Danny Ayers",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/danja/semem/issues"
    },
    "homepage": "https://github.com/danja/semem#readme",
    "devDependencies": {
        "jasmine": "^5.5.0",
        "jasmine-spec-reporter": "^7.0.0",
        "jsdoc": "^4.0.4"
    },
    "dependencies": {
        "@langchain/core": "^0.3.19",
        "@langchain/openai": "^0.3.14",
        "faiss-node": "^0.5.1",
        "graphology": "^0.25.4",
        "ml-kmeans": "^6.0.0",
        "ollama": "^0.5.10"
    }
}

================
File: package.json
================
{
  "name": "tbox",
  "version": "1.0.0",
  "description": "Docker-contained environment for hyperdata.it apps",
  "private": true,
  "workspaces": [
    "services/*"
  ],
  "scripts": {
    "start": "docker-compose up",
    "build": "docker-compose build",
    "test": "npm run test --workspaces",
    "lint": "npm run lint --workspaces",
    "clean": "docker-compose down --volumes",
    "rp": "repomix -c repomix.config.json ."
  },
  "keywords": [
    "docker",
    "fuseki",
    "prosody",
    "nginx"
  ],
  "author": "Danny Ayers",
  "license": "MIT"
}

================
File: README.md
================
# tbox

a minimal Docker-contained environment, primarily for Transmissions

================
File: restart.sh
================
docker-compose down --volumes  # Remove containers and volumes
docker-compose build --no-cache  # Rebuild without cache
docker-compose up -d  # Start fresh

docker-compose logs

curl -X GET http://localhost:4030/test/query \
  -H "Accept: application/sparql-results+json" \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  --data-urlencode "query=SELECT * WHERE { ?s ?p ?o }"

================
File: test_fuseki-persistence.sh
================
#!/bin/bash

echo "Waiting for Fuseki to be ready..."
until curl -s http://localhost:4030/$/ping > /dev/null; do
    echo "Waiting for Fuseki..."
    sleep 2
done
echo "Fuseki is up!"

echo "Adding test data..."
curl -X POST http://localhost:4030/ds/update \
  -H "Authorization: Basic $(echo -n 'admin:admin123' | base64)" \
  -H "Content-Type: application/sparql-update" \
  --data "INSERT DATA { <http://example/s> <http://example/p> <http://example/o> }"

echo -e "\nRestarting containers..."
docker-compose restart

echo "Waiting for Fuseki to be ready again..."
until curl -s http://localhost:4030/$/ping > /dev/null; do
    echo "Waiting for Fuseki..."
    sleep 2
done

echo -e "\nQuerying data..."
curl -X GET http://localhost:4030/ds/query \
  -H "Accept: application/sparql-results+json" \
  --data-urlencode "query=SELECT * WHERE { ?s ?p ?o }"

================
File: tree.txt
================
.
├── about.md
├── app
│   ├── app.js
│   └── node.log
├── _bad-pack-script_pork.sh
├── certs
│   ├── localhost.crt
│   └── localhost.key
├── check_fuseki.sh
├── config
│   └── prosody
│       ├── certs
│       └── prosody.cfg.lua
├── config.ttl
├── data
│   └── prosody
│       └── http_upload
├── default.conf
├── docker-compose.yml
├── Dockerfile
├── docs
│   ├── artifacts_2024-12-28
│   │   ├── architecture.mermaid
│   │   ├── deploy-scripts.sh
│   │   ├── handover-doc.md
│   │   ├── handover-rdf.txt
│   │   └── implementation.md
│   └── postcraft
│       ├── cache
│       ├── content-raw
│       │   ├── articles
│       │   │   ├── about.md
│       │   │   ├── quickstart-guide_claude.md
│       │   │   ├── readme.md
│       │   │   └── tbox-goal-starter_2024-12-28.md
│       │   ├── entries
│       │   │   ├── 2023-10-27_hello.md
│       │   │   └── 20244-10-22_purple.md
│       │   ├── journal
│       │   └── todo
│       │       └── next-steps.md
│       ├── content-static
│       │   └── references
│       ├── layouts
│       │   ├── fancier
│       │   │   └── Cinzel
│       │   │       └── fonts
│       │   │           ├── Cinzel-VariableFont_wght.ttf
│       │   │           ├── OFL.txt
│       │   │           ├── README.txt
│       │   │           └── static
│       │   │               ├── Cinzel-Black.ttf
│       │   │               ├── Cinzel-Bold.ttf
│       │   │               ├── Cinzel-ExtraBold.ttf
│       │   │               ├── Cinzel-Medium.ttf
│       │   │               ├── Cinzel-Regular.ttf
│       │   │               └── Cinzel-SemiBold.ttf
│       │   ├── inspiration.md
│       │   ├── logos
│       │   │   ├── logo-big.png
│       │   │   ├── logo-invert.bmp
│       │   │   ├── logo-invert.png
│       │   │   └── logo.png
│       │   ├── mediocre
│       │   │   ├── about.md
│       │   │   ├── css
│       │   │   │   ├── fonts.css
│       │   │   │   ├── grid-columns-bad.css
│       │   │   │   ├── grid-columns.css
│       │   │   │   └── style.css
│       │   │   ├── fonts
│       │   │   │   ├── lora-bolditalic-webfont.woff
│       │   │   │   ├── lora-bolditalic-webfont.woff2
│       │   │   │   ├── lora-bold-webfont.woff
│       │   │   │   ├── lora-bold-webfont.woff2
│       │   │   │   ├── lora-italic-webfont.woff
│       │   │   │   ├── lora-italic-webfont.woff2
│       │   │   │   ├── lora-regular-webfont.woff
│       │   │   │   ├── lora-regular-webfont.woff2
│       │   │   │   ├── Roboto-Bold-webfont.woff
│       │   │   │   ├── RobotoCondensed-Regular-webfont.woff
│       │   │   │   └── Roboto-Regular-webfont.woff
│       │   │   ├── js
│       │   │   ├── layout-sample.html
│       │   │   └── templates
│       │   │       ├── entry-content_template.njk
│       │   │       ├── entry-page_template.njk
│       │   │       └── index-page_template.njk
│       │   ├── misc
│       │   │   ├── BITS.TXT
│       │   │   ├── butler-columns.css
│       │   │   ├── butler-orig.css
│       │   │   ├── grid-version.txt
│       │   │   └── holy-grail.html
│       │   ├── reset.css
│       │   └── trials
│       │       ├── boilerplate.html
│       │       ├── butler.html
│       │       ├── grid-10.html
│       │       ├── grid-2.html
│       │       ├── grid-3.html
│       │       ├── grid-4.html
│       │       ├── grid-5.html
│       │       ├── grid-6.html
│       │       ├── grid-7.html
│       │       ├── grid-7-nearly-prompt.html
│       │       ├── grid-8.html
│       │       ├── grid-for-prompt.html
│       │       └── grid-w3c.html
│       ├── manifest.ttl
│       ├── media
│       │   └── images
│       │       └── 2024-04
│       │           └── internet-fad.jpeg
│       ├── prompts
│       │   ├── 2024-10-06_prompt-01.md
│       │   ├── about.md
│       │   └── system-prompt.md
│       └── public
├── fuseki-data
│   ├── backups
│   ├── config.ttl
│   ├── configuration
│   │   └── test.ttl
│   ├── databases
│   │   ├── ds
│   │   │   ├── Data-0001
│   │   │   │   ├── GOSP.bpt
│   │   │   │   ├── GOSP.dat
│   │   │   │   ├── GOSP.idn
│   │   │   │   ├── GPOS.bpt
│   │   │   │   ├── GPOS.dat
│   │   │   │   ├── GPOS.idn
│   │   │   │   ├── GPU.bpt
│   │   │   │   ├── GPU.dat
│   │   │   │   ├── GPU.idn
│   │   │   │   ├── GSPO.bpt
│   │   │   │   ├── GSPO.dat
│   │   │   │   ├── GSPO.idn
│   │   │   │   ├── journal.jrnl
│   │   │   │   ├── nodes.bpt
│   │   │   │   ├── nodes.dat
│   │   │   │   ├── nodes-data.bdf
│   │   │   │   ├── nodes-data.obj
│   │   │   │   ├── nodes.idn
│   │   │   │   ├── OSP.bpt
│   │   │   │   ├── OSP.dat
│   │   │   │   ├── OSPG.bpt
│   │   │   │   ├── OSPG.dat
│   │   │   │   ├── OSPG.idn
│   │   │   │   ├── OSP.idn
│   │   │   │   ├── POS.bpt
│   │   │   │   ├── POS.dat
│   │   │   │   ├── POSG.bpt
│   │   │   │   ├── POSG.dat
│   │   │   │   ├── POSG.idn
│   │   │   │   ├── POS.idn
│   │   │   │   ├── prefixes.bpt
│   │   │   │   ├── prefixes.dat
│   │   │   │   ├── prefixes-data.bdf
│   │   │   │   ├── prefixes-data.obj
│   │   │   │   ├── prefixes.idn
│   │   │   │   ├── SPO.bpt
│   │   │   │   ├── SPO.dat
│   │   │   │   ├── SPOG.bpt
│   │   │   │   ├── SPOG.dat
│   │   │   │   ├── SPOG.idn
│   │   │   │   ├── SPO.idn
│   │   │   │   └── tdb.lock
│   │   │   └── tdb.lock
│   │   └── test
│   │       ├── Data-0001
│   │       │   ├── GOSP.bpt
│   │       │   ├── GOSP.dat
│   │       │   ├── GOSP.idn
│   │       │   ├── GPOS.bpt
│   │       │   ├── GPOS.dat
│   │       │   ├── GPOS.idn
│   │       │   ├── GPU.bpt
│   │       │   ├── GPU.dat
│   │       │   ├── GPU.idn
│   │       │   ├── GSPO.bpt
│   │       │   ├── GSPO.dat
│   │       │   ├── GSPO.idn
│   │       │   ├── journal.jrnl
│   │       │   ├── nodes.bpt
│   │       │   ├── nodes.dat
│   │       │   ├── nodes-data.bdf
│   │       │   ├── nodes-data.obj
│   │       │   ├── nodes.idn
│   │       │   ├── OSP.bpt
│   │       │   ├── OSP.dat
│   │       │   ├── OSPG.bpt
│   │       │   ├── OSPG.dat
│   │       │   ├── OSPG.idn
│   │       │   ├── OSP.idn
│   │       │   ├── POS.bpt
│   │       │   ├── POS.dat
│   │       │   ├── POSG.bpt
│   │       │   ├── POSG.dat
│   │       │   ├── POSG.idn
│   │       │   ├── POS.idn
│   │       │   ├── prefixes.bpt
│   │       │   ├── prefixes.dat
│   │       │   ├── prefixes-data.bdf
│   │       │   ├── prefixes-data.obj
│   │       │   ├── prefixes.idn
│   │       │   ├── SPO.bpt
│   │       │   ├── SPO.dat
│   │       │   ├── SPOG.bpt
│   │       │   ├── SPOG.dat
│   │       │   ├── SPOG.idn
│   │       │   ├── SPO.idn
│   │       │   └── tdb.lock
│   │       └── tdb.lock
│   ├── logs
│   ├── shiro.ini
│   ├── system
│   │   ├── GOSP.dat
│   │   ├── GOSP.idn
│   │   ├── GPOS.dat
│   │   ├── GPOS.idn
│   │   ├── GSPO.dat
│   │   ├── GSPO.idn
│   │   ├── journal.jrnl
│   │   ├── node2id.dat
│   │   ├── node2id.idn
│   │   ├── nodes.dat
│   │   ├── OSP.dat
│   │   ├── OSPG.dat
│   │   ├── OSPG.idn
│   │   ├── OSP.idn
│   │   ├── POS.dat
│   │   ├── POSG.dat
│   │   ├── POSG.idn
│   │   ├── POS.idn
│   │   ├── prefix2id.dat
│   │   ├── prefix2id.idn
│   │   ├── prefixes.dat
│   │   ├── prefixIdx.dat
│   │   ├── prefixIdx.idn
│   │   ├── SPO.dat
│   │   ├── SPOG.dat
│   │   ├── SPOG.idn
│   │   ├── SPO.idn
│   │   ├── tdb.cfg
│   │   └── tdb.lock
│   ├── system_files
│   │   └── 01e1b390-2d95-11b2-8038-0242c0a83002
│   └── templates
│       ├── config-mem
│       ├── config-tdb
│       ├── config-tdb2
│       ├── config-tdb2-dir
│       ├── config-tdb2-mem
│       ├── config-tdb-dir
│       └── config-tdb-mem
├── LICENSE
├── logs
│   ├── app
│   ├── fuseki
│   └── nginx
│       ├── access.log
│       └── error.log
├── monitor
│   ├── Dockerfile
│   ├── index.js
│   ├── node_modules
│   │   ├── accepts
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── array-flatten
│   │   │   ├── array-flatten.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── body-parser
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── lib
│   │   │   │   ├── read.js
│   │   │   │   └── types
│   │   │   │       ├── json.js
│   │   │   │       ├── raw.js
│   │   │   │       ├── text.js
│   │   │   │       └── urlencoded.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── SECURITY.md
│   │   ├── bytes
│   │   │   ├── History.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── Readme.md
│   │   ├── call-bind-apply-helpers
│   │   │   ├── actualApply.d.ts
│   │   │   ├── actualApply.js
│   │   │   ├── applyBind.d.ts
│   │   │   ├── applyBind.js
│   │   │   ├── CHANGELOG.md
│   │   │   ├── functionApply.d.ts
│   │   │   ├── functionApply.js
│   │   │   ├── functionCall.d.ts
│   │   │   ├── functionCall.js
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── reflectApply.d.ts
│   │   │   ├── reflectApply.js
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── call-bound
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── content-disposition
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── content-type
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── cookie
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── SECURITY.md
│   │   ├── cookie-signature
│   │   │   ├── History.md
│   │   │   ├── index.js
│   │   │   ├── package.json
│   │   │   └── Readme.md
│   │   ├── data-uri-to-buffer
│   │   │   ├── dist
│   │   │   │   ├── index.d.ts
│   │   │   │   ├── index.js
│   │   │   │   └── index.js.map
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── src
│   │   │       └── index.ts
│   │   ├── debug
│   │   │   ├── CHANGELOG.md
│   │   │   ├── component.json
│   │   │   ├── karma.conf.js
│   │   │   ├── LICENSE
│   │   │   ├── Makefile
│   │   │   ├── node.js
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── src
│   │   │       ├── browser.js
│   │   │       ├── debug.js
│   │   │       ├── index.js
│   │   │       ├── inspector-log.js
│   │   │       └── node.js
│   │   ├── depd
│   │   │   ├── History.md
│   │   │   ├── index.js
│   │   │   ├── lib
│   │   │   │   └── browser
│   │   │   │       └── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── Readme.md
│   │   ├── destroy
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── dunder-proto
│   │   │   ├── CHANGELOG.md
│   │   │   ├── get.d.ts
│   │   │   ├── get.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── set.d.ts
│   │   │   ├── set.js
│   │   │   ├── test
│   │   │   │   ├── get.js
│   │   │   │   ├── index.js
│   │   │   │   └── set.js
│   │   │   └── tsconfig.json
│   │   ├── ee-first
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── encodeurl
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── escape-html
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── Readme.md
│   │   ├── es-define-property
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── es-errors
│   │   │   ├── CHANGELOG.md
│   │   │   ├── eval.d.ts
│   │   │   ├── eval.js
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── range.d.ts
│   │   │   ├── range.js
│   │   │   ├── README.md
│   │   │   ├── ref.d.ts
│   │   │   ├── ref.js
│   │   │   ├── syntax.d.ts
│   │   │   ├── syntax.js
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   ├── tsconfig.json
│   │   │   ├── type.d.ts
│   │   │   ├── type.js
│   │   │   ├── uri.d.ts
│   │   │   └── uri.js
│   │   ├── es-object-atoms
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── RequireObjectCoercible.d.ts
│   │   │   ├── RequireObjectCoercible.js
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   ├── ToObject.d.ts
│   │   │   ├── ToObject.js
│   │   │   └── tsconfig.json
│   │   ├── etag
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── express
│   │   │   ├── History.md
│   │   │   ├── index.js
│   │   │   ├── lib
│   │   │   │   ├── application.js
│   │   │   │   ├── express.js
│   │   │   │   ├── middleware
│   │   │   │   │   ├── init.js
│   │   │   │   │   └── query.js
│   │   │   │   ├── request.js
│   │   │   │   ├── response.js
│   │   │   │   ├── router
│   │   │   │   │   ├── index.js
│   │   │   │   │   ├── layer.js
│   │   │   │   │   └── route.js
│   │   │   │   ├── utils.js
│   │   │   │   └── view.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── Readme.md
│   │   ├── fetch-blob
│   │   │   ├── file.d.ts
│   │   │   ├── file.js
│   │   │   ├── from.d.ts
│   │   │   ├── from.js
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── streams.cjs
│   │   ├── finalhandler
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── SECURITY.md
│   │   ├── formdata-polyfill
│   │   │   ├── esm.min.d.ts
│   │   │   ├── esm.min.js
│   │   │   ├── FormData.js
│   │   │   ├── formdata.min.js
│   │   │   ├── formdata-to-blob.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── forwarded
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── fresh
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── function-bind
│   │   │   ├── CHANGELOG.md
│   │   │   ├── implementation.js
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── test
│   │   │       └── index.js
│   │   ├── get-intrinsic
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── test
│   │   │       └── GetIntrinsic.js
│   │   ├── gopd
│   │   │   ├── CHANGELOG.md
│   │   │   ├── gOPD.d.ts
│   │   │   ├── gOPD.js
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── hasown
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── tsconfig.json
│   │   ├── has-symbols
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── shams.d.ts
│   │   │   ├── shams.js
│   │   │   ├── test
│   │   │   │   ├── index.js
│   │   │   │   ├── shams
│   │   │   │   │   ├── core-js.js
│   │   │   │   │   └── get-own-property-symbols.js
│   │   │   │   └── tests.js
│   │   │   └── tsconfig.json
│   │   ├── http-errors
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── iconv-lite
│   │   │   ├── Changelog.md
│   │   │   ├── encodings
│   │   │   │   ├── dbcs-codec.js
│   │   │   │   ├── dbcs-data.js
│   │   │   │   ├── index.js
│   │   │   │   ├── internal.js
│   │   │   │   ├── sbcs-codec.js
│   │   │   │   ├── sbcs-data-generated.js
│   │   │   │   ├── sbcs-data.js
│   │   │   │   ├── tables
│   │   │   │   │   ├── big5-added.json
│   │   │   │   │   ├── cp936.json
│   │   │   │   │   ├── cp949.json
│   │   │   │   │   ├── cp950.json
│   │   │   │   │   ├── eucjp.json
│   │   │   │   │   ├── gb18030-ranges.json
│   │   │   │   │   ├── gbk-added.json
│   │   │   │   │   └── shiftjis.json
│   │   │   │   ├── utf16.js
│   │   │   │   └── utf7.js
│   │   │   ├── lib
│   │   │   │   ├── bom-handling.js
│   │   │   │   ├── extend-node.js
│   │   │   │   ├── index.d.ts
│   │   │   │   ├── index.js
│   │   │   │   └── streams.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── inherits
│   │   │   ├── inherits_browser.js
│   │   │   ├── inherits.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── ipaddr.js
│   │   │   ├── ipaddr.min.js
│   │   │   ├── lib
│   │   │   │   ├── ipaddr.js
│   │   │   │   └── ipaddr.js.d.ts
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── math-intrinsics
│   │   │   ├── abs.d.ts
│   │   │   ├── abs.js
│   │   │   ├── CHANGELOG.md
│   │   │   ├── constants
│   │   │   │   ├── maxArrayLength.d.ts
│   │   │   │   ├── maxArrayLength.js
│   │   │   │   ├── maxSafeInteger.d.ts
│   │   │   │   ├── maxSafeInteger.js
│   │   │   │   ├── maxValue.d.ts
│   │   │   │   └── maxValue.js
│   │   │   ├── floor.d.ts
│   │   │   ├── floor.js
│   │   │   ├── isFinite.d.ts
│   │   │   ├── isFinite.js
│   │   │   ├── isInteger.d.ts
│   │   │   ├── isInteger.js
│   │   │   ├── isNaN.d.ts
│   │   │   ├── isNaN.js
│   │   │   ├── isNegativeZero.d.ts
│   │   │   ├── isNegativeZero.js
│   │   │   ├── LICENSE
│   │   │   ├── max.d.ts
│   │   │   ├── max.js
│   │   │   ├── min.d.ts
│   │   │   ├── min.js
│   │   │   ├── mod.d.ts
│   │   │   ├── mod.js
│   │   │   ├── package.json
│   │   │   ├── pow.d.ts
│   │   │   ├── pow.js
│   │   │   ├── README.md
│   │   │   ├── round.d.ts
│   │   │   ├── round.js
│   │   │   ├── sign.d.ts
│   │   │   ├── sign.js
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── media-typer
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── merge-descriptors
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── methods
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── mime
│   │   │   ├── CHANGELOG.md
│   │   │   ├── cli.js
│   │   │   ├── LICENSE
│   │   │   ├── mime.js
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── src
│   │   │   │   ├── build.js
│   │   │   │   └── test.js
│   │   │   └── types.json
│   │   ├── mime-db
│   │   │   ├── db.json
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── mime-types
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── ms
│   │   │   ├── index.js
│   │   │   ├── license.md
│   │   │   ├── package.json
│   │   │   └── readme.md
│   │   ├── negotiator
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── lib
│   │   │   │   ├── charset.js
│   │   │   │   ├── encoding.js
│   │   │   │   ├── language.js
│   │   │   │   └── mediaType.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── node-domexception
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── node-fetch
│   │   │   ├── LICENSE.md
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── src
│   │   │   │   ├── body.js
│   │   │   │   ├── errors
│   │   │   │   │   ├── abort-error.js
│   │   │   │   │   ├── base.js
│   │   │   │   │   └── fetch-error.js
│   │   │   │   ├── headers.js
│   │   │   │   ├── index.js
│   │   │   │   ├── request.js
│   │   │   │   ├── response.js
│   │   │   │   └── utils
│   │   │   │       ├── get-search.js
│   │   │   │       ├── is.js
│   │   │   │       ├── is-redirect.js
│   │   │   │       ├── multipart-parser.js
│   │   │   │       └── referrer.js
│   │   │   └── @types
│   │   │       └── index.d.ts
│   │   ├── object-inspect
│   │   │   ├── CHANGELOG.md
│   │   │   ├── example
│   │   │   │   ├── all.js
│   │   │   │   ├── circular.js
│   │   │   │   ├── fn.js
│   │   │   │   └── inspect.js
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── package-support.json
│   │   │   ├── readme.markdown
│   │   │   ├── test
│   │   │   │   ├── bigint.js
│   │   │   │   ├── browser
│   │   │   │   │   └── dom.js
│   │   │   │   ├── circular.js
│   │   │   │   ├── deep.js
│   │   │   │   ├── element.js
│   │   │   │   ├── err.js
│   │   │   │   ├── fakes.js
│   │   │   │   ├── fn.js
│   │   │   │   ├── global.js
│   │   │   │   ├── has.js
│   │   │   │   ├── holes.js
│   │   │   │   ├── indent-option.js
│   │   │   │   ├── inspect.js
│   │   │   │   ├── lowbyte.js
│   │   │   │   ├── number.js
│   │   │   │   ├── quoteStyle.js
│   │   │   │   ├── toStringTag.js
│   │   │   │   ├── undef.js
│   │   │   │   └── values.js
│   │   │   ├── test-core-js.js
│   │   │   └── util.inspect.js
│   │   ├── on-finished
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── parseurl
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── path-to-regexp
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── Readme.md
│   │   ├── proxy-addr
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── qs
│   │   │   ├── CHANGELOG.md
│   │   │   ├── dist
│   │   │   │   └── qs.js
│   │   │   ├── lib
│   │   │   │   ├── formats.js
│   │   │   │   ├── index.js
│   │   │   │   ├── parse.js
│   │   │   │   ├── stringify.js
│   │   │   │   └── utils.js
│   │   │   ├── LICENSE.md
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── test
│   │   │       ├── empty-keys-cases.js
│   │   │       ├── parse.js
│   │   │       ├── stringify.js
│   │   │       └── utils.js
│   │   ├── range-parser
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── raw-body
│   │   │   ├── HISTORY.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── SECURITY.md
│   │   ├── safe-buffer
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── safer-buffer
│   │   │   ├── dangerous.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── Porting-Buffer.md
│   │   │   ├── Readme.md
│   │   │   ├── safer.js
│   │   │   └── tests.js
│   │   ├── send
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── node_modules
│   │   │   │   ├── encodeurl
│   │   │   │   │   ├── HISTORY.md
│   │   │   │   │   ├── index.js
│   │   │   │   │   ├── LICENSE
│   │   │   │   │   ├── package.json
│   │   │   │   │   └── README.md
│   │   │   │   └── ms
│   │   │   │       ├── index.js
│   │   │   │       ├── license.md
│   │   │   │       ├── package.json
│   │   │   │       └── readme.md
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── SECURITY.md
│   │   ├── serve-static
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── setprototypeof
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   └── test
│   │   │       └── index.js
│   │   ├── side-channel
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── side-channel-list
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── list.d.ts
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── side-channel-map
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── side-channel-weakmap
│   │   │   ├── CHANGELOG.md
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   ├── README.md
│   │   │   ├── test
│   │   │   │   └── index.js
│   │   │   └── tsconfig.json
│   │   ├── statuses
│   │   │   ├── codes.json
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── toidentifier
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── type-is
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── unpipe
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── utils-merge
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── vary
│   │   │   ├── HISTORY.md
│   │   │   ├── index.js
│   │   │   ├── LICENSE
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   └── web-streams-polyfill
│   │       ├── dist
│   │       │   ├── polyfill.es2018.js
│   │       │   ├── polyfill.es2018.js.map
│   │       │   ├── polyfill.es2018.min.js
│   │       │   ├── polyfill.es2018.min.js.map
│   │       │   ├── polyfill.es2018.mjs
│   │       │   ├── polyfill.es2018.mjs.map
│   │       │   ├── polyfill.es6.js
│   │       │   ├── polyfill.es6.js.map
│   │       │   ├── polyfill.es6.min.js
│   │       │   ├── polyfill.es6.min.js.map
│   │       │   ├── polyfill.es6.mjs
│   │       │   ├── polyfill.es6.mjs.map
│   │       │   ├── polyfill.js
│   │       │   ├── polyfill.js.map
│   │       │   ├── polyfill.min.js
│   │       │   ├── polyfill.min.js.map
│   │       │   ├── polyfill.mjs
│   │       │   ├── polyfill.mjs.map
│   │       │   ├── ponyfill.es2018.js
│   │       │   ├── ponyfill.es2018.js.map
│   │       │   ├── ponyfill.es2018.mjs
│   │       │   ├── ponyfill.es2018.mjs.map
│   │       │   ├── ponyfill.es6.js
│   │       │   ├── ponyfill.es6.js.map
│   │       │   ├── ponyfill.es6.mjs
│   │       │   ├── ponyfill.es6.mjs.map
│   │       │   ├── ponyfill.js
│   │       │   ├── ponyfill.js.map
│   │       │   ├── ponyfill.mjs
│   │       │   ├── ponyfill.mjs.map
│   │       │   └── types
│   │       │       ├── polyfill.d.ts
│   │       │       ├── ponyfill.d.ts
│   │       │       ├── ts3.6
│   │       │       │   ├── polyfill.d.ts
│   │       │       │   └── ponyfill.d.ts
│   │       │       └── tsdoc-metadata.json
│   │       ├── es2018
│   │       │   └── package.json
│   │       ├── es6
│   │       │   └── package.json
│   │       ├── LICENSE
│   │       ├── package.json
│   │       ├── ponyfill
│   │       │   ├── es2018
│   │       │   │   └── package.json
│   │       │   ├── es6
│   │       │   │   └── package.json
│   │       │   └── package.json
│   │       └── README.md
│   ├── package.json
│   └── package-lock.json
├── nginx.conf
├── package.json
├── package-ref.json
├── prosody-data
├── prosody-uploads
├── README.md
├── repomix.config.json
├── restart.sh
├── _setup-and-run-script.sh
├── tbox-repomix.txt
├── test_fuseki-persistence.sh
└── tree.txt

186 directories, 852 files
