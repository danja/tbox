services:
  ssh-server:
    build: .
    ports:
      - "2222:22"
    volumes:
      - ./projects:/home/projects
      - ./config/scripts:/scripts:ro
      - node_modules:/home/projects/node_modules
      - npm_cache:/root/.npm
      - ssh_config:/root/.ssh
    environment:
      - NODE_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    healthcheck:
      test: [ "CMD", "pgrep", "sshd" ]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: ./services/app
    ports:
      - "4010:8311"
    depends_on:
      - fuseki
    environment:
      - FUSEKI_URL=http://fuseki:3030
      - FUSEKI_DATASET_1=ds
      - FUSEKI_DATASET_2=test-mem
      - FUSEKI_DATASET_3=test-db
      - FUSEKI_DATASET_4=semem
      - FUSEKI_DATASET_5=squirt
      - FUSEKI_DATASET_6=tia
      - FUSEKI_DATASET_7=claudiob
      - FUSEKI_DATASET_8=danja
      - FUSEKI_DATASET_9=danbri
      - FUSEKI_DATASET_10=hyperdata

  fuseki:
    image: stain/jena-fuseki:latest
    user: "0:0" # root
    ports:
      - "4030:3030"
    volumes:
      - ./data/fuseki:/fuseki/databases
      - ./config/fuseki:/fuseki/configuration:rw
    environment:
      - ADMIN_PASSWORD=admin123
      - FUSEKI_CONFIG_FILE=/fuseki/configuration/config.ttl
      - FUSEKI_BASE=/fuseki
      - SHIRO_INI=/fuseki/configuration/shiro.ini
      - JVM_ARGS=-Xmx2048m -Xms2048m
    init: true
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3030/" ]
      interval: 1m
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "4000:4000"   # Main dashboard
      - "4200:4200"   # Squirt - RDF data manipulation tool
      - "4210:4210"   # Atuin - Command history and shell data management
      - "4220:4220"   # Transmissions - Communication protocols
      - "4240:4240"   # Semem - Semantic memory and knowledge graph tools
      - "4250:4250"   # Farelo - Content processing and transformation
      - "4280:4280"   # Wstore - Web storage and content management
      - "4290:4290"   # Hyperdata - Main project documentation
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/web/public:/usr/share/nginx/html:ro
      - ./projects:/home/projects:ro
    depends_on:
      - app
      - fuseki
      - ssh-server

  xmpp:
    #   image: prosody/prosody

    build:
      context: . # Build context is the root of the tbox project
      dockerfile: Dockerfile.prosody # Use your custom Dockerfile
    ports:
      - "5222:5222"
      - "5269:5269"
      - "5280:5280" # Standard HTTP
      - "5281:5281" # Standard HTTPS if enabled
      - "5282:5282" # For http-monitor if you intend to use it on this port
    volumes:
      # moved to Dockerfile.prosody
      #     - ./config/prosody/prosody.cfg.lua:/etc/prosody/prosody.cfg.lua:ro
      - ./config/certs:/etc/prosody/certs:rw # CRITICAL: Must be read-write for the script to create/update certs and dh.pem
      #   - ./config/prosody/conf.d:/etc/prosody/conf.d:ro
      # Mount the entrypoint and initialization scripts
      #   - ./config/prosody/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
      #   - ./config/prosody/ensure-prosody-certs.sh:/usr/local/bin/ensure-prosody-certs.sh:ro
      #   - ./config/prosody/prosody-init-users.sh:/usr/local/bin/prosody-init-users.sh:ro
    environment:
      - PROSODY_DOMAIN=xmpp # Set your desired domain here (e.g., xmpp)
      - PROSODY_ADMIN_JID=admin@xmpp # Align with PROSODY_DOMAIN
      - PROSODY_ADMIN_PASSWORD=admin123
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: [ "prosody" ] # Pass the 'prosody' command as arguments to the entrypoint script
    restart: unless-stopped

  monitor:
    build:
      context: ./services/monitor
    ports:
      - "4040:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
      - fuseki
      - xmpp

volumes:
  node_modules:
  npm_cache:
  ssh_config:
  data:
    driver: local
