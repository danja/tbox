version: "3"
services:
  ssh-server:
    build: .
    ports:
      - "2222:22"
    volumes:
      - ./projects:/home/projects
      - node_modules:/home/projects/node_modules
      - npm_cache:/root/.npm
      - ssh_config:/root/.ssh
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "pgrep", "sshd"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: ./services/app
    ports:
      - "4000:8311"
    depends_on:
      - fuseki
    environment:
      - FUSEKI_URL=http://fuseki:3030
      - FUSEKI_DATASET=semem

  fuseki:
    image: stain/jena-fuseki
    ports:
      - "4030:3030"
    volumes:
      - ./data/fuseki:/fuseki/databases
      - ./config/fuseki:/fuseki/configuration
    environment:
      - ADMIN_PASSWORD=admin123
      - FUSEKI_CONFIG_FILE=/fuseki/configuration/config.ttl
      - FUSEKI_BASE=/fuseki
      - SHIRO_INI=/fuseki/configuration/shiro.ini
      - JVM_ARGS=-Xmx2g

  nginx:
    image: nginx:alpine
    ports:
      - "4080:4080"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/web/public:/usr/share/nginx/html:ro
    depends_on:
      - app
      - fuseki

  xmpp:
    image: prosody/prosody
    ports:
      - "5222:5222"
      - "5269:5269"
      - "5280:5280"
      - "5282:5282"
    volumes:
      - ./data/uploads:/var/lib/prosody/http_upload
      - ./config/prosody/prosody.cfg.lua:/etc/prosody/prosody.cfg.lua:ro
      - ./config/certs:/etc/prosody/certs:ro
      - ./data/prosody:/var/lib/prosody
    environment:
      - PROSODY_GENERATE_CERTS=true
      - PROSODY_MAX_UPLOAD_SIZE=104857600
      - PROSODY_ADMIN_JID=admin@localhost
      - PROSODY_ADMIN_PASSWORD=admin123
      - PROSODY_MONITORING=true
      - PROSODY_MONITORING_PORT=5282
    healthcheck:
      test: ["CMD-SHELL", "prosodyctl status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  monitor:
    build:
      context: ./services/monitor
    ports:
      - "4040:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
      - fuseki
      - xmpp

volumes:
  node_modules:
  npm_cache:
  ssh_config:
  data:
    driver: local
